//solve sudoku
import java.io.*;
class solve
{
    
    int count;
    /*void inputarr() throws Exception
    {
        BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
        System.out.println("ënter elements");
        for(int i=0;i<9;i++)
            for(int j=0;j<9;j++)

            {
                a[i][j]=Integer.parseInt(br.readLine());
            }
    }*/

    void display(int a[][])
    {
        for(int i=0;i<9;i++)
        {
            if(i==3||i==6)
            {
                System.out.println();
            }
            for(int j=0;j<9;j++)
            {
                if(j==3||j==6)
                    System.out.print("   "); 

                System.out.print(a[i][j]+" ");
            }
            System.out.println();
        }
    }

    void find(int a[][])
    {
        while(true)
        {
            for(int i=0;i<9;i++)
            {
                for(int j=0;j<9;j++)
                {
                    
                    if(a[i][j]==0)
                    {
                        sol(i,j,a);
                    }
                }
            }
            
            if(over(a))
               break;
            }
    }

    void sol(int x,int y,int a[][])

    {
        count=0;
        int k,g=0;
        for( k=1;k<=9;k++)
        {
            if(chkgrp(x,y,k,a) && chkrow(x,k,a) && chkcol(y,k,a))
            {g=k;
                count++;}
                if(count>1)
               break; 
        }
        if(count==1)
            a[x][y]=g;
        else
            a[x][y]=0;

    }

    boolean chkrow(int r,int k,int a[][])
    {
        for(int i=0;i<9;i++)
        {
            if(a[r][i]==k)
                return false;
        }
        return true;
    }

    boolean chkcol(int c,int k,int a[][])
    {
        for(int i=0;i<9;i++)
        {
            if(a[i][c]==k)
                return false;
        }
        return true;
    }

    boolean chkgrp(int p,int q,int k,int a[][])
    {
        int cs=0,cl=0,rs=0,rl=0;
        if(q%3==0)
        {cs=q;
            cl=q+2;
        }
        if((q-2)%3==0)
        {
            cs=q-2;
            cl=q;
        }
        if((q-1)%3==0)
        {
            cs=q-1;
            cl=q+1;}
           
            if(p%3==0)
        {rs=p;
            rl=p+2;
        }
        if((p-2)%3==0)
        {
            rs=p-2;
            rl=p;
        }
        if((p-1)%3==0)
        {
            rs=p-1;
            rl=p+1;}
            
            for(int i=rs;i<=rl;i++)
            for(int j=cs;j<=cl;j++)
            {
                if(a[i][j]==k)
                return false;
            }
            return true;
    }

    boolean over(int a[][])
    {
        for(int i=0;i<9;i++)
            for(int j=0;j<9;j++)
            {if(a[i][j]==0)
                    return false;
            }
        return true;
    }

    
    public static void main(String args[]) 
    {
        solve s=new solve();
        //s.inputarr();
        int a[][]={{5,3,0,0,7,0,0,0,0},
                  {6,0,0,1,9,5,0,0,0},
                  {0,9,8,0,0,0,0,6,0},
                  {8,0,0,0,6,0,0,0,3},
                  {4,0,0,8,0,3,0,0,1},
                  {7,0,0,0,2,0,0,0,6},
                  {0,6,0,0,0,0,2,8,0},
                  {0,0,0,4,1,9,0,0,5},
                  {0,0,0,0,8,0,0,7,9}};
                  
                  
        System.out.println("sudoku");
        System.out.println();
        s.display(a);
        s.find(a);
        System.out.println("solved:");
        System.out.println();
        s.display(a);

     }
    }


